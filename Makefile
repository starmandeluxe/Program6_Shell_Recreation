CC 	= gcc

CFLAGS  = -Wall -g

LD 	= $(CC)

LDFLAGS  = -g

LEX     = lex

LFLAGS  = 

YACC    = /usr/ccs/bin/yacc

YFLAGS  = -d

PROG    = vssh

OBJS	= main.o stringstuff.o lex.yy.o y.tab.o longstr.o\
	  pipeline.o stringlist.o vssh.o

SRCS	= main.c stringstuff.c parser.y lexer.l longstr.c\
	  pipeline.c stringlist.c vssh.c

HDRS	= pipeline.h stringstuff.h stringlist.h parser.h longstr.h\
	  builtin.h config.h vssh.h

LIBS 	= 

EXTRACLEAN = parser.output $(PROG) $(PROG).tar

YACCFILES  = lex.yy.c y.tab.c y.tab.h 

all: 	$(PROG)

$(PROG): $(OBJS)
	$(LD) $(LDFLAGS) -o $(PROG) $(OBJS) $(LIBS)

allclean: clean
	rm -f $(EXTRACLEAN)

clean:	
	rm -f $(OBJS) $(YACCFILES) *~ TAGS

tar:  $(PROG).tar

$(PROG).tar: Makefile $(SRCS) $(HDRS)
	tar cvf $(PROG).tar Makefile.hornet Makefile $(SRCS) $(HDRS)

tags : $(SRCS) $(HDRS)
	etags $(SRCS) $(HDRS)  

test:	$(PROG)
	$(PROG)

lex.yy.c: lexer.l 
	$(LEX) $(LFLAGS) lexer.l

lex.yy.o: lex.yy.c y.tab.h
	$(CC) -g -c lex.yy.c

y.tab.o: parser.h y.tab.h parser.y 
	$(CC) -g -c y.tab.c

y.tab.h: y.tab.c
	@#nothing (see below)

y.tab.c: parser.y
	$(YACC) $(YFLAGS) parser.y

# These dependencies generated by makedepend, but cleaned up for
# portability

lex.yy.o:	stringstuff.h  parser.h stringlist.h pipeline.h   y.tab.h\
		config.h

longstr.o:	config.h

main.o:		pipeline.h stringlist.h longstr.h parser.h y.tab.h config.h

pipeline.o:	pipeline.h stringlist.h parser.h y.tab.h config.h

sigint.o:	pipeline.h stringlist.h config.h

stringlist.o:	stringlist.h config.h

stringstuff.o:	stringstuff.h parser.h stringlist.h pipeline.h y.tab.h\
		config.h
vssh.o: vssh.h

y.tab.o:	pipeline.h stringlist.h parser.h y.tab.h config.h

